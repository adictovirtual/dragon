{"version":3,"sources":["../../../src/dragon/controllers/index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgBM,U;;;;;;;;;;AASJ,WATI,UASJ,GAA0B;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,wCATtB,UASsB;;AACxB,SAAK,GAAL,GAAW,gBAAM,QAAN,CAAe,IAAf,CAAX;AACD;;6BAXG,U;;4BAaI,G,EAAK,G,EAAmB;AAAA,UAAd,OAAc,yDAAJ,EAAI;;;AAE9B,UAAG,UAAU,MAAV,IAAoB,CAApB,IAAyB,sBAAO,uBAAa,GAAb,CAAP,KAA4B,QAAxD,EAAkE;AAChE,YAAI,cAAc,uBAAa,GAAb,CAAlB;;AAEA,eAAO,WAAP;AACD;;;;;AAKD,UAAG,CAAC,uBAAa,GAAb,CAAD,IAAsB,QAAQ,MAAjC,EAAyC;;AAEvC,+BAAa,GAAb,IAAoB,IAAI,GAAJ,CAAQ,OAAR,CAApB;AAED;AAEF;;;8BAES;;AAER,UAAG,CAAC,KAAK,QAAT,EAAmB;;AAEjB,wBAAM,OAAN,CAAc,IAAd,EAAoB;AAClB,4BAAkB,CAAC,KAAD;AADA,SAApB;AAID;AAEF;;SA1CG,U;;;AA8CN,WAAW,SAAX,CAAqB,QAArB,GAAgC,KAAhC;;kBAEe,U","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport composeStore from '../lib/composeStore'\nimport utils        from '../utils'\n\n/**\n * Controller Class\n *\n * @public\n * @class Controller\n */\nclass Controller {\n\n  /**\n   * Controller constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n    this.uid = utils.uniqueId(this)\n  }\n\n  compose(key, Val, options = {}) {\n\n    if(arguments.length == 1 || typeof composeStore[key] == 'object') {\n      var composition = composeStore[key]\n\n      return composition\n    }\n\n    /*\n    TODO: Figure out how updating/replacing a composition would work.\n    */\n    if(!composeStore[key] || options.update) {\n\n      composeStore[key] = new Val(options)\n\n    }\n\n  }\n\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this, {\n        ignoreProperties: ['app']\n      })\n\n    }\n\n  }\n\n}\n\nController.prototype.disposed = false\n\nexport default Controller\n"]}