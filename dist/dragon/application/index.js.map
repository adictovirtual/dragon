{"version":3,"sources":["../../../src/dragon/application/index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkBM,W;;;;;;;;;;AASJ,WATI,WASJ,GAA0B;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,wCATtB,WASsB;;;;;;;;AAOxB,SAAK,GAAL,GAAW,gBAAM,QAAN,CAAe,IAAf,CAAX;;;;;;;;AAQA,SAAK,QAAL,GAAgB,KAAhB;;;;;;;;AAQA,SAAK,OAAL,GAAe,OAAf;;AAEA,QAAG,CAAC,KAAK,OAAL,CAAa,MAAb,CAAoB,MAAxB,EAAgC,OAAO,QAAQ,KAAR,CAAc,6BAAd,EAA6C,KAAK,OAAlD,CAAP;;;;;;;;AAQhC,SAAK,MAAL,GAAc,oBAAW;AACvB,cAAQ,KAAK,OAAL,CAAa,MAAb,CAAoB;AADL,KAAX,CAAd;;;;;;;;AAUA,QAAI,aAAa,KAAK,UAAL,GAAkB,yBAAe;AAChD,WAAK,IAD2C;AAEhD,qBAAe,QAAQ,UAAR,CAAmB;AAFc,KAAf,CAAnC;;AAKA,SAAK,MAAL,CAAY,EAAZ,CAAe,OAAf,EAAwB,SAAS,kBAAT,CAA4B,KAA5B,EAAmC,MAAnC,EAA2C,OAA3C,EAAoD;;AAE1E,iBAAW,QAAX,CAAoB,KAApB,EAA2B,MAA3B,EAAmC,OAAnC;AAED,KAJD;AAMD;;;;;;;;;;;;6BA/DG,W;;8BAyEM;;AAER,UAAG,CAAC,KAAK,QAAT,EAAmB;;AAEjB,wBAAM,OAAN,CAAc,IAAd;AAED;AAEF;;;;;;;;;;;;;4BAUO;;AAEN,WAAK,MAAL,CAAY,KAAZ;AAED;;SA/FG,W;;;AAmGN,sBAAc,YAAY,SAA1B,EAAqC,EAAC,sBAAD,EAArC;;kBAEe,W","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport Dispatcher from '../router/dispatcher'\nimport mixin      from '../mixin'\nimport Router     from '../router/index'\nimport utils      from '../utils'\n\n/**\n * Application Class\n *\n * @public\n * @class Application\n */\nclass Application {\n\n  /**\n   * Application constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n    /**\n     * Application UID\n     *\n     * @private\n     * @type {String}\n     */\n    this.uid = utils.uniqueId(this)\n\n    /**\n     * Disposed\n     *\n     * @private\n     * @type {Object}\n     */\n    this.disposed = false\n\n    /**\n     * Options\n     *\n     * @private\n     * @type {Object}\n     */\n    this.options = options\n\n    if(!this.options.router.routes) return console.error('Application requires routes', this.options)\n\n    /**\n     * Router.\n     *\n     * @private\n     * @type {Object}\n     */\n    this.router = new Router({\n      routes: this.options.router.routes\n    })\n\n    /**\n     * Dispatcher.\n     *\n     * @private\n     * @type {Object}\n     */\n    var dispatcher = this.dispatcher = new Dispatcher({\n      app: this,\n      getController: options.dispatcher.getController\n    })\n\n    this.router.on('match', function routeMatchCallback(route, params, options) {\n\n      dispatcher.dispatch(route, params, options)\n\n    })\n\n  }\n\n  /**\n   * Dispose of the application\n   *\n   * @example\n   *   application.dispose()\n   *\n   * @public\n   */\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this)\n\n    }\n\n  }\n\n  /**\n   * Start the application\n   *\n   * @example\n   *   application.start()\n   *\n   * @public\n   */\n  start() {\n\n    this.router.start()\n\n  }\n\n}\n\nObject.assign(Application.prototype, {mixin})\n\nexport default Application\n"]}