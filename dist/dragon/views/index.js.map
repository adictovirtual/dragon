{"version":3,"sources":["../../../src/dragon/views/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {createContainer}  from 'f12-stardux'\nimport {Parser, Template} from 'f12-starplate'\nimport EventEmitter       from '../events'\nimport mixin              from '../mixin'\nimport utils              from '../utils'\n\nvar stardux = require('f12-stardux')\n\n// Thanks: http://stackoverflow.com/questions/7238177/detect-htmlcollection-nodelist-in-javascript\nfunction isNodeList(nodes) {\n  var stringRepr = Object.prototype.toString.call(nodes)\n\n  return typeof nodes === 'object' &&\n    /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(stringRepr) &&\n    (typeof nodes.length === 'number') &&\n    (nodes.length === 0 || (typeof nodes[0] === \"object\" && nodes[0].nodeType > 0))\n}\n\n/**\n * View Class\n *\n * @public\n * @class View\n */\nclass View {\n\n  /**\n   * View constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n\n    /**\n     * View UID\n     *\n     * @private\n     * @type {String}\n     */\n    this.uid = utils.uniqueId(this)\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    /**\n     * Event Emitter's emit method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    /**\n     * Event Emitter's on method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.on    = eventEmitter.addListener.bind(eventEmitter)\n    /**\n     * Event Emitter's once method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.once  = eventEmitter.addOnceListener.bind(eventEmitter)\n    /**\n     * Event Emitter's off method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    /**\n     * Whether the view attached to the DOM\n     * @type {Boolean}\n     * @private\n     */\n    this.attached = false\n\n    /**\n     * Whether to attach the view on initialization\n     * @type {Boolean}\n     */\n    this.attachOnInit = true\n\n    /**\n     * Determines where the view is attached into the container\n     * @type {String}\n     */\n    this.attachPlacement = 'after'\n\n    /**\n     * Whether to bind data from Incremental DOM to the view on initialization.\n     * @type {Boolean}\n     */\n    this.bindDataOnInit = true\n\n    /**\n     * Whether the view has been disposed of.\n     * @type {Boolean}\n     * @private\n     */\n    this.disposed = false\n\n    /**\n     * Whether to render the view's template(s) on initialization\n     * @type {Boolean}\n     */\n    this.renderOnInit = true\n\n    //this._childContainers = {}\n    /**\n     * Events attached to the view\n     * @type {Array}\n     * @private\n     */\n    this._events    = []\n    /**\n     * Listeners attached to the view\n     * @type {Array}\n     * @private\n     */\n    this._listeners = []\n    /**\n     * Partial templates available to use in the reducer\n     * @type {Object}\n     * @private\n     */\n    this._partials  = {}\n    /**\n     * Sub views attached to the view\n     * @type {Object}\n     * @private\n     */\n    this._views     = {}\n\n    this.assignOptions(options)\n\n    //this.setProperties()\n\n    //this.ensureElement()\n    this.ensureContainer()\n\n    if(this.options.idom instanceof createContainer) {\n      //this.$container =\n      //TODO: figure out how to get $container from an already created container\n      this.idom = this.options.idom\n      this.attached = true // Since the idom container is being passed in, we assume it's been attached (although I guess its possible it hasn't been)\n    }\n\n    if(!this.attached && this.attachOnInit) {\n\n      this.once('render', () => {\n\n        this.attach()\n\n      })\n\n    }\n\n    if(this.bindDataOnInit && (\n      this.model ||\n      this.models ||\n      this.collection ||\n      this.collections\n    )) {\n      this.bindDataOnChange()\n    }\n\n    if(this.renderOnInit) this.render()\n\n  }\n\n  addedToDOM() {\n    // Intended to be over-written\n  }\n\n  /*\n  @method attach\n  @type Function\n  @return this\n  @desc Attaches the view to the DOM\n  */\n\n  assignOptions(options = {}) {\n\n    // Object.assign is used so that options passed into parent constructor are not lost when child is disposed\n    this.options = Object.assign({}, options)\n\n    if(this.options.partials) {\n\n      Object.keys(this.options.partials).forEach( (key) => {\n        this.partial(key, this.options.partials[key])\n      })\n      //delete this.options.partials\n    }\n\n    Object.keys(this.options).forEach( (option) => {\n\n      if(this.directOptions && this.directOptions.indexOf(option) > -1) {\n\n        this[option] = options[option]\n\n      }\n\n      else {\n\n        this.options[option] = options[option]\n\n      }\n\n    })\n\n  }\n\n  attach() {\n\n    try {\n\n      /*\n      Can't use .forEach() on NodeLists\n      Tempting to use NodeList.prototype.forEach = Array.prototype.forEach but that's a no no\n      See for basic info: https://developer.mozilla.org/en-US/docs/Web/API/NodeList\n      See this guy (which I ignore) for a super long list of reasons: http://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\n      */\n\n      Array.prototype.forEach.call(this.$container, ($container) => {\n\n        var placement;\n\n        switch(this.attachPlacement) {\n\n          // Attach before all other children in container\n          case 'first'   : $container['prependChild'](this.el); break;\n          case 'prepend' : $container['prependChild'](this.el); break;\n\n          // Attach normally, after all children in container\n          default: $container['appendChild'](this.el)\n\n        }\n\n      })\n\n    }\n\n    catch(e) {\n\n      console.error(e)\n\n    }\n\n    /*if(!this.$el) {\n      this.setElement()\n    }*/\n\n    this.attached = true\n\n    this.emit('addedToDOM')\n    if(this.onAddedToDOM) this.onAddedToDOM()\n\n    return this\n\n  }\n\n  bindDataOnChange() {\n\n    if(this.model && this.model.on)           this.model.on('change', this.render.bind(this))\n    if(this.collection && this.collection.on) this.collection.on('change', this.render.bind(this))\n\n    if(this.models) {\n      Object.keys(this.models).forEach( (key) => {\n        this.models[key].on('change', () => {\n          this.render.call(this)\n        })\n      })\n    }\n\n    if(this.collections) {\n      Object.keys(this.collections).forEach( (key) => {\n        this.collections[key].on('change', () => {\n          this.render.call(this)\n        })\n      })\n    }\n\n  }\n\n  bindEvent() {\n\n    if(typeof arguments[2] == 'undefined') throw new Error(`Event \"${arguments[0]}\" on ${this.constructor.name} requires callback`)\n\n    var action  = arguments[0],\n        handler = arguments[arguments.length - 1].bind(this)\n\n    switch(arguments.length) {\n\n      case 3:\n\n        var $selector = arguments[1]\n\n        Array.prototype.forEach.call($selector, (selector) => {\n\n          selector.addEventListener(action, handler, false)\n\n        })\n\n        break;\n\n      default:\n\n    }\n\n  }\n\n  bindEvents() {\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1], // TODO: scope this locally\n          listener  = item[2]\n\n      Array.prototype.forEach.call($selector, (selector) => {\n\n        selector.addEventListener(action, listener, false)\n\n      })\n\n    })\n\n  }\n\n  childContainer(name, selector, reducer) {\n\n    if(!selector) {\n      return this._childContainers[name]\n    }\n\n    var $el = this.$(selector)\n    if($el) {\n      this._childContainers[name] = createContainer($el, {}, reducer)\n    }\n\n  }\n\n  /*bindListens() {\n\n    this.listen.forEach( (item) => {\n\n      var eventName = item[0],\n          handler   = item[1]\n\n      this.on(eventName, handler)\n\n    })\n\n  }*/\n\n  delegateEvent(action, $el, selector, handler) {\n    var _this = this\n\n    if(typeof $el == 'string') $el = document.querySelectorAll($el)\n\n    if(typeof $el == 'object' && $el.$ref) {\n      $el = $el.$ref\n    }\n\n    if(typeof selector == 'object' && selector.selector) {\n      selector = selector.selector\n    }\n\n    var handlerWrap = function(e) {\n      var t = e.target\n      while (t && t !== this) {\n        if (t.matches(selector)) {\n          var index = null\n\n          if(t.tagName == 'LI') {\n            var c = t.parentNode.childNodes\n            for(var i = 0, l = c.length; i < l; i++) {\n              if(c[i] == t) {\n                index = i\n                break\n              }\n            }\n          }\n\n          handler.call(_this, e, index)\n        }\n        t = t.parentNode\n      }\n    }\n\n    this._events.push([action, $el, handlerWrap])\n\n    Array.prototype.forEach.call($el, (el) => {\n\n      el.addEventListener(action, handlerWrap)\n\n    })\n\n  }\n\n  /*\n  @method detach\n  @type Function\n  @desc Detachs the view from the DOM\n  */\n  detach() {\n    //console.log(\"DEBUG: Detaching: Container\", this.$container)\n    //console.log(\"DEBUG: Detaching: El\", this.$el)\n\n    if(this.detached) {\n      console.error('Cannot detach view as it has already been detached')\n      return\n    }\n\n    /*\n    TODO:\n    This is a weird error; if you put a return here, then it will not detach, but the error makes it sound like there is no DOM node to detach.\n    */\n    if(!this.$container) {\n\n      console.error('DEBUG: Detach Error: this.$container is not defined')\n      //return\n    }\n\n    Array.prototype.forEach.call(this.$container, (container) => {\n\n      /*\n      TODO: not happy with this\n      */\n      var identifier = this.el.tagName.toLowerCase()\n      if(this.el.id) {\n        identifier = `#${this.el.id}`\n      }\n      else if(this.el.className) {\n        identifier = '.' + this.el.className.replace(' ', ' .')\n      }\n\n      var els = container.querySelectorAll(identifier)\n\n      Array.prototype.forEach.call(els, (el) => {\n\n        container.removeChild(el)\n\n      })\n\n    })\n\n    this.detached = true\n    this.emit('detach')\n\n    /*Array.prototype.forEach.call(this.$el, function(el) {\n\n      container.removeChild\n\n      // I've always thought this is a funny way to remove Nodes from the DOM :O\n      console.log(\"el\", el)\n\n      console.log(\"parent\", el.parentNode)\n\n      //TODO: Fix the angryness from multiple copies of same ID - yes the developer *shouldnt* do that, but this should still communicate that instead of just freaking out\n\n      el.parentNode.removeChild(el)\n\n    })*/\n\n  }\n\n  /*\n  @method detach\n  @type Function\n  @desc Completely disposes of the view, any sub views, it's DOM, events, etc.\n  */\n  dispose() {\n\n    if(!this.disposed) {\n\n      this.unBindEvents()\n      this.unBindListens()\n\n      Object.keys(this._views).forEach( (key) => {\n        var view = this._views[key]\n        view.dispose()\n      })\n\n      this.on('detach', () => {\n        utils.dispose(this)\n      })\n\n      this.detach()\n    }\n\n  }\n\n  ensureContainer() {\n\n    if(this.container) {\n\n      if(this.container instanceof Node) {\n        this.$container = [this.container]\n      }\n\n      else if(typeof this.container == 'string') {\n        this.$container = this.$(this.container)\n      }\n\n    }\n\n    if(this.renderOnInit) {\n      if(!this.container || !this.$container || this.$container.length == 0) console.error('No container(s) found.', this, this.container)\n    }\n\n  }\n\n  ensureElement() {\n\n    // We need a wrapping tag; it's too dangerous to patch a template without one\n    if(!this.tagName) this.tagName = 'div'\n\n    this.el = document.createElement(this.tagName)\n\n    if(this.id) this.el.id = this.id\n    if(this.class) this.el.className = this.class\n\n  }\n\n  event() {\n\n    if(!this.attached) {\n      this.on('addedToDOM', () => {\n\n        this._event.apply(this, arguments)\n\n      })\n    }\n\n    else {\n      this._event.apply(this, arguments)\n    }\n\n  }\n\n  _event(action) {\n\n    var handler = arguments[arguments.length - 1],\n        origHandler = arguments[arguments.length - 1],\n        selector,\n        _this   = this\n\n    switch(arguments.length) {\n\n      case 2:\n\n        selector = this.el\n\n        break\n\n      case 3:\n\n        selector = arguments[1]\n\n        break\n\n      default:\n\n    }\n\n    if(typeof selector == 'string') selector = this.$(selector)\n\n    if(typeof selector == 'object' && selector.$ref) {\n      selector = selector.$ref\n    }\n\n    switch(action) {\n\n      case 'enter':\n\n        action = 'keydown'\n\n        handler = function(e) {\n\n          if(e.keyCode == 13) {\n            e.preventDefault()\n            origHandler.call(_this, e)\n          }\n\n        }\n\n        break\n\n      default:\n\n    }\n\n    this._events.push([action, selector, handler])\n\n    if(this.attached) {\n      this.bindEvent(action, selector, handler)\n    }\n\n    else {\n      this.on('addedToDOM', () => {\n        this.bindEvent(action, selector, handler)\n      })\n    }\n\n  }\n\n  getTagName(template) {\n\n    var el = document.createElement('div')\n    el.innerHTML = template\n\n    return el.firstElementChild.tagName.toLowerCase()\n\n  }\n\n  /*\n  @method getTemplate\n  @type Function\n  @returns String\n  @desc Gets the template for the view\n\n  @notes This function can do whatever the developer desires. Mixins, such as Handlebars Mixin, will take overwrite this. The developer should feel comfortable overwriting this.\n  */\n  getTemplate() {\n\n    return this.template\n\n  }\n\n  getIDOMData() {\n\n    var pkg = {}\n\n    // Property naming ensues\n    if(this.models || this.collections) {\n\n      if(this.models) {\n        for(var j in this.models) {\n          pkg[j] = this.models[j].attr\n        }\n      }\n\n      if(this.collections) {\n        for(var k in this.collections) {\n          pkg[k] = this.collections[k].getData()\n        }\n      }\n\n    }\n\n    // Classic Backbone\n    else {\n\n      if(this.model) {\n        pkg = Object.assign({}, this.model.attr)\n      }\n\n      else if(this.collection) {\n        pkg = Object.assign({}, {collection: this.collection.getData()})\n      }\n\n    }\n\n    return pkg\n\n  }\n\n  listen() {\n\n    var ev      = arguments[0],\n        handler = arguments[1]\n\n    switch(arguments.length) {\n\n      case 2:\n\n        this.on(ev, handler.bind(this))\n\n        break;\n\n      default:\n\n    }\n\n    this._listeners.push(ev, handler)\n\n  }\n\n  partial(name, html) {\n    if(html) {\n      this._partials[name] = new Template(html)\n    }\n\n    return this._partials[name]\n  }\n\n  rebindEvents() {\n\n    this.unBindEvents()\n    this.bindEvents()\n\n  }\n\n  refreshIDOM() {\n    var pkg = this.getIDOMData()\n\n    this.idom.update(Object.assign({}, pkg))\n  }\n\n  /*\n  @method render\n  @type Function\n  @return this\n  @desc Renders the view\n  */\n\n  render() {\n\n    /*\n    TODO: Debug incremental dom and see if it is firing more times than\n    necessary\n    */\n    //console.log('render called', this.attached, this.id)\n    /*\n    TODO: really both should exist, but gotta figure out how to get container from existing idom passed in\n    */\n    if(!this.container && !this.idom) {\n      console.error('Container type not valid.', this.uid)\n      return this\n    }\n\n    /*\n    Remember with Backbone you would call .render() to update the template?\n    If the template has been attached, then update the template with Incremental DOM\n    */\n    if(this.attached) {\n      this.refreshIDOM()\n      //console.log('DEBUG: am i already attached?', this.constructor.name)\n      return this\n    }\n\n    /*\n    TODO: What is going on that is re-defining el? Is it a race condition with\n    an update the container, which triggers multiple updates within milliseconds?\n\n    If this.el is attempted to be re-assigned, an error will be thrown about not\n    re-assigning a read-only property.\n    */\n    if(this.el) {\n      //console.log('DEBUG: el is already assigned on', this.constructor.name)\n      return\n    }\n    else {\n      // Ideally this gets called in constructor, but see above\n      this.ensureElement()\n    }\n\n    //var Container = stardux.Container\n    this.idom = createContainer(this.el, {}, this.reducer.bind(this))\n\n    this.el.innerHTML = this.getTemplate()\n\n    this.refreshIDOM()\n\n    this.emit('render')\n\n    return this\n\n  }\n\n  /*\n  @method setAttributes\n  @type Function\n  @returns Void\n  @desc Assigns attributes to view\n\n  @param attributes {Object}\n  */\n\n  setAttributes() {\n\n    this.attributes = {}\n\n    var el = document.createElement('div')\n    el.innerHTML = this.getTemplate()\n\n    if(el.firstChild.id) {\n\n      this.id = el.firstChild.id\n\n    }\n\n    if(el.firstChild.className) {\n\n      this.className = el.firstChild.className\n\n    }\n\n    var ignore = [\n      'class',\n      'id'\n    ]\n\n    Array.from(el.firstChild.attributes).forEach( (item) => {\n\n      // If the attribute is not on the ignore list\n      if(ignore.indexOf(item.name) == -1) {\n        this.attributes[item.name] = item.value\n      }\n\n    })\n\n  }\n\n  setElement() {\n\n    if(this.id) {\n      var id   = `#${this.id}`\n\n      if(!this.el) this.el = id\n      this.$el = this.$(id)\n    }\n\n    else if(this.className) {\n\n      var splitClassName = this.className.split(' ')\n        var className = ''\n\n      for(let i = 0, l = splitClassName.length; i < l; i++) {\n\n        className += `.${splitClassName[i]}`\n\n      }\n\n      if(!this.el) this.el = className\n      this.$el = this.$(className)\n    }\n\n    // TODO: only query within container\n    else {\n      var tagName = this.tagName\n\n      if(!this.el) this.el = tagName\n      this.$el = this.$(tagName)\n    }\n\n  }\n\n  setProperties() {\n\n    var allowedOptions = [\n      'container',\n      'el',\n      'template'\n    ]\n\n    var options = Object.assign(this.options)\n\n    Object.keys(options).forEach( (key) => {\n\n      // If the property is not on the ignore list\n      if(allowedOptions.indexOf(key) > -1) {\n\n        this[key] = options[key]\n        delete this.options[key]\n\n      }\n\n    })\n\n  }\n\n  state(action) {\n    this.idom.update({current: action})\n  }\n\n  unBindEvent(removeAction, removeSelector) {\n    var $removeSelector = document.querySelectorAll(removeSelector)\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1],\n          listener  = item[2]\n\n      if(action == removeAction && $selector == $removeSelector) {\n        Array.prototype.forEach.call($selector, (selector) => {\n\n          selector.removeEventListener(action, listener, false)\n\n        })\n      }\n\n    })\n  }\n\n  unBindEvents() {\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1], // TODO: scope this locally\n          listener  = item[2]\n\n      Array.prototype.forEach.call($selector, (selector) => {\n\n        selector.removeEventListener(action, listener, false)\n\n      })\n\n    })\n\n    //this._events = []\n\n  }\n\n  unBindListens() {\n\n    this._listeners.forEach( (item) => {\n\n      var ev      = item[0],\n          handler = item[1]\n\n      this.off(ev, handler)\n\n    })\n\n  }\n\n  /*\n  Keep track of sub-views\n  */\n  view(name, view) {\n\n    if(arguments.length == 1) {\n      return this._views[name]\n    } else {\n      this._views[name] = view\n    }\n\n  }\n\n}\n\nObject.assign(View.prototype, {mixin})\n\n/* Developer Notes\nThe following properties & methods are assigned on the prototype to allow for easier overriding.\n*/\n\n/*\n@property $\n@type Object\n@default native\n@desc $ query engine\n*/\n//DragonBaseView.prototype.$ = document.querySelectorAll.bind(document)\nView.prototype.$ = function(selector) {\n\n  var doc = null\n\n  if(typeof global == 'object' && global.document) doc = global.document\n  if(typeof window == 'object' && window.document) doc = window.document\n\n  return doc.querySelectorAll.call(doc, selector)\n\n}\n\n/**\n * Direct Options. Some options are important enough that they should be directly on the view. Also offers consistency for overriding certain properties.\n *\n * @private\n * @const\n * @type {Array}\n */\nView.prototype.directOptions = [\n  'attachOnInit',\n  'attachPlacement',\n  'bindDataOnInit',\n  'class', // why did CSS use this?\n  'collection',\n  'collections',\n  'component',\n  'container',\n  'events',\n  'id',\n  'listen',\n  'mediator',\n  'model',\n  'models',\n  'reducer',\n  'renderOnInit',\n  'tagName',\n  'template',\n  'View'\n]\n\nexport default View\n"]}