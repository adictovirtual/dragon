{"version":3,"sources":["../../../src/dragon/components/base.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOM,e;AAEJ,WAFI,eAEJ,GAA0B;AAAA;;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,wCAFtB,eAEsB;;AACxB,SAAK,GAAL,GAAW,gBAAM,QAAN,CAAe,IAAf,CAAX;AACA,SAAK,CAAL,GAAS,eAAK,SAAL,CAAe,CAAxB;;;AAGA,QAAI,eAAe,sBAAnB;;AAEA,SAAK,IAAL,GAAa,aAAa,SAAb,CAAuB,IAAvB,CAA4B,YAA5B,CAAb;AACA,SAAK,EAAL,GAAa,aAAa,WAAb,CAAyB,IAAzB,CAA8B,YAA9B,CAAb;AACA,SAAK,IAAL,GAAa,aAAa,eAAb,CAA6B,IAA7B,CAAkC,YAAlC,CAAb;AACA,SAAK,GAAL,GAAa,aAAa,cAAb,CAA4B,IAA5B,CAAiC,YAAjC,CAAb;;AAEA,SAAK,QAAL,GAAgB,KAAhB;AACA,SAAK,YAAL,GAAoB,QAAQ,YAAR,IAAwB,IAA5C;AACA,SAAK,QAAL,GAAgB,KAAhB;;;;;;AAMA,SAAK,aAAL,GAAqB,CACnB,cADmB,EAEnB,iBAFmB,EAGnB,OAHmB,E;AAInB,gBAJmB,EAKnB,WALmB,EAMnB,IANmB,EAOnB,OAPmB,EAQnB,cARmB,EASnB,SATmB,CAArB;;AAYA,mBAAK,SAAL,CAAe,aAAf,CAA6B,IAA7B,CAAkC,IAAlC,EAAwC,OAAxC;;;;;AAKA,mBAAK,SAAL,CAAe,eAAf,CAA+B,IAA/B,CAAoC,IAApC;;AAEA,QAAG,CAAC,KAAK,QAAN,IAAkB,KAAK,YAA1B,EAAwC;;AAEtC,WAAK,IAAL,CAAU,QAAV,EAAoB,YAAM;;AAExB,uBAAK,SAAL,CAAe,MAAf,CAAsB,IAAtB;AAED,OAJD;AAMD;;AAED,SAAK,MAAL;AACD;;;;;;;6BApDG,e;;6BA8DK;AACP,WAAK,EAAL,GAAU,SAAS,aAAT,CAAuB,KAAK,OAAL,IAAgB,KAAvC,CAAV;;AAEA,UAAG,KAAK,EAAR,EAAe,KAAK,EAAL,CAAQ,EAAR,GAAoB,KAAK,EAAzB;AACf,UAAG,KAAK,KAAR,EAAe,KAAK,EAAL,CAAQ,SAAR,GAAoB,KAAK,KAAzB;;AAEf,WAAK,IAAL,CAAU,QAAV;;AAEA,aAAO,IAAP;AACD;;;8BAES;;AAER,UAAG,CAAC,KAAK,QAAT,EAAmB;;AAEjB,wBAAM,OAAN,CAAc,IAAd;AAED;AAEF;;SAjFG,e;;;AAqFN,sBAAc,gBAAgB,SAA9B,EAAyC;;;;;AAKvC;AALuC,CAAzC;;kBAQe,e","file":"base.js","sourcesContent":["'use strict';\n\nimport EventEmitter from '../events'\nimport mixin        from '../mixin'\nimport View         from '../views/base'\nimport utils        from '../utils'\n\nclass DragonComponent {\n\n  constructor(options = {}) {\n    this.uid = utils.uniqueId(this)\n    this.$ = View.prototype.$\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    this.on    = eventEmitter.addListener.bind(eventEmitter)\n    this.once  = eventEmitter.addOnceListener.bind(eventEmitter)\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    this.attached = false\n    this.attachOnInit = options.attachOnInit || true\n    this.disposed = false\n\n    /*\n    Direct Options\n    Some options are important enough that they should be directly on the view. Also offers consistency for overriding certain properties.\n    */\n    this.directOptions = [\n      'attachOnInit',\n      'attachPlacement',\n      'class', // why did CSS use this?\n      'collection',\n      'container',\n      'id',\n      'model',\n      'renderOnInit',\n      'tagName'\n    ]\n\n    View.prototype.assignOptions.call(this, options)\n\n    //this._registry = {}\n\n    //console.log(this)\n    View.prototype.ensureContainer.call(this)\n\n    if(!this.attached && this.attachOnInit) {\n\n      this.once('render', () => {\n\n        View.prototype.attach.call(this)\n\n      })\n\n    }\n\n    this.render()\n  }\n\n  /*get() {\n\n  }\n\n  set(name, ) {\n\n  }*/\n\n  render() {\n    this.el = document.createElement(this.tagName || 'div')\n\n    if(this.id)    this.el.id        = this.id\n    if(this.class) this.el.className = this.class\n\n    this.emit('render')\n\n    return this\n  }\n\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this)\n\n    }\n\n  }\n\n}\n\nObject.assign(DragonComponent.prototype, {\n  //assignOptions   : View.prototype.assignOptions.bind(DragonComponent.prototype),\n  //directOptions   : View.prototype.directOptions.bind(DragonComponent.prototype),\n  //attach          : View.prototype.attach.bind(DragonComponent.prototype),\n  //ensureContainer : View.prototype.ensureContainer.bind(DragonComponent.prototype),\n  mixin\n})\n\nexport default DragonComponent\n"]}