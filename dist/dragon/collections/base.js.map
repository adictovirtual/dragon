{"version":3,"sources":["../../../src/dragon/collections/base.js"],"names":[],"mappings":"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","file":"base.js","sourcesContent":["'use strict';\n\nimport EventEmitter from '../events'\nimport mixin        from '../mixin'\nimport Model        from '../models/base'\nimport utils        from '../utils'\n\nclass DragonBaseCollection {\n\n  constructor(entries = [], options = {}) {\n    this.uid = utils.uniqueId(this)\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    this.on    = eventEmitter.addListener.bind(eventEmitter)\n    this.once  = eventEmitter.addOnceListener.bind(eventEmitter)\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    this.disposed = false\n    this.Model    = options.Model || Model\n    this.models   = []\n    this.options  = options\n    this.url      = options.url || this.url || ''\n\n    if(!this.Model || !(this.Model instanceof Function)) {\n      throw new Error('Collection requires a valid Model Class')\n    }\n\n    if(typeof this.url != 'string') {\n      throw new Error('Collection requires a valid url')\n    }\n\n    this.ensureEntries(entries)\n  }\n\n  add(entries, options = {}) {\n    this.ensureEntries(entries, options)\n  }\n\n  clear() {\n    this.models = []\n  }\n\n  /*\n  TODO: Clean this up, make checks stronger\n  Currently, a mixed array of objects and models could be passed; it's an odd scenario that would cause that to hapen thoug.\n  Tecnnically a model instance of a different model could be passed; need to check and prevent that.\n  Should also consider concatting arrays as pushing arrays of 1000 or more can be very time consuming/lots of looping.\n  Overall this function sucks but helps move the project forward atm.\n  */\n\n  ensureEntries(entries, options = {}) {\n\n    /*\n    TODO: figure out how to clean this up\n    */\n    if(\n      typeof entries == 'null' ||\n      typeof entries == 'undefined' ||\n      (!entries.length && typeof entries == 'object' && Object.keys(entries).length == 0)\n    ) return\n\n    // we will suppport all kind of iterable  here !!\n    // It is simpler to manage things by making a single item an array\n    if(!(entries[Symbol.iterator])) {\n      entries = [entries]\n    }\n\n    if(options.at) options.at--\n    for(let entry of entries) {\n      var model = null\n\n      /*\n      TODO: should create a collection that supports multiple types of  models\n      */\n      if(entry instanceof this.Model) {\n        model = entry\n        this.models.push(model)\n      }\n\n      else {\n\n        /*\n        TODO:\n        somehow the first item in this.models gets duplicated to the end, and then new items that were added are added :/\n        */\n        // If collection has entry, merge the results\n        if(entry.id) {\n\n          var index = null\n          var existingModel = this.models.filter( (item, i) => {\n            if(item.attr.id == entry.id) {\n              index = i\n              return item\n            }\n          })\n\n          if(existingModel.length > 0 && index) {\n            model = Object.assign(this.models[index], entry)\n          }\n        }\n\n        // Create a new entry\n        if(!model) {\n          model = new this.Model(entry, {storeAutoLoad: false})\n\n          if(options.at) {\n            options.at++\n            this.models.splice(options.at, 0, entry)\n            //this.models.splice.apply(this.models, [optoins.at, 0].concat([model]))\n          }\n\n          else {\n            this.models.push(model)\n          }\n\n        }\n\n      }\n\n      this.emit('change', model, this.models.length - 1)\n    }\n\n  }\n\n  /*\n  TODO: not really sure what to call this function\n  */\n  getData() {\n    var data = []\n\n    this.models.forEach( (model) => {\n      data.push(model.getData())\n    })\n\n    return data\n  }\n\n  move(fromIndex, toIndex, options = {}) {\n    this.models.splice(toIndex, 0, this.models.splice(fromIndex, 1)[0])\n  }\n\n  remove(index, options = {}) {\n    var changeEvent = (typeof options.changeEvent == 'boolean') ? options.changeEvent : true\n\n    this.models.splice(index, 1)\n\n    if(changeEvent) {\n      this.emit('change')\n      this.emit('removed')\n    }\n  }\n\n  toJSON() {\n    return this.models.map( (model) => model.toJSON())\n  }\n\n  [Symbol.iterator](){\n    var collectionsModels = this.models,\n        index = 0\n\n    return {\n      next: function next () {\n        if (index + 1 > collectionsModels.length) {\n          return { done: true };\n        }\n        return { value: collectionsModels[index++], done: false };\n      }\n    }\n  }\n\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this)\n\n    }\n\n  }\n\n}\n\nObject.assign(DragonBaseCollection.prototype, {mixin})\n\nmodule.exports = DragonBaseCollection\n"]}